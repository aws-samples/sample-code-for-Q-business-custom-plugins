AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  q-business-custom-plugins

  SAM Template for q-business-custom-plugins api

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  ShoppingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: partition_key
          AttributeType: S
        - AttributeName: sort_key
          AttributeType: S
      KeySchema:
        - AttributeName: partition_key
          KeyType: HASH
        - AttributeName: sort_key
          KeyType: RANGE
      SSESpecification:
        SSEEnabled: true
      BillingMode: PAY_PER_REQUEST
  ShoppingCartFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: rust-cargolambda # More info about Cargo Lambda: https://github.com/cargo-lambda/cargo-lambda
      BuildProperties:
        Binary: lambda
    Properties:
      CodeUri: ./ # Points to dir of Cargo.toml
      Handler: bootstrap # Do not change, as this is the default executable name produced by Cargo Lambda
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:753240598075:layer:LambdaAdapterLayerX86:23
      Events:
        HttpEvents:
          Type: HttpApi
      Environment:
        Variables:
          TABLE_NAME: !Ref ShoppingTable
          ROCKET_PORT: 8080
      Timeout: 30
    Connectors:
      DbConnector:
        Properties:
          Destination:
            Id: ShoppingTable
          Permissions:
            - Read
            - Write

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ShoppingCartApi:
    Description: API Gateway endpoint URL for the ShoppingCart function
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com"
  ShoppingCartFunction:
    Description: ShoppingCart Function ARN
    Value: !GetAtt ShoppingCartFunction.Arn
  ShoppingCartFunctionIamRole:
    Description: Implicit IAM Role created for ShoppingCart function
    Value: !GetAtt ShoppingCartFunctionRole.Arn
